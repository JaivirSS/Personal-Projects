CREATE TYPE "role" AS ENUM (
  'user',
  'admin'
);

CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" varchar UNIQUE NOT NULL,
  "username" varchar NOT NULL,
  "password" varchar NOT NULL,
  "profile_picture" varchar,
  "biography" varchar,
  "role" role NOT NULL DEFAULT 'user',
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "friends" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY,
  "user_id" int NOT NULL,
  "friend_id" int NOT NULL,
  "is_accepted" bool NOT NULL DEFAULT false,
  "created_at" timestamp DEFAULT (now()),
  PRIMARY KEY("user_id", "friend_id") 
);

CREATE TABLE "messages" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "sender_id" int NOT NULL,
  "room_id" int NOT NULL,
  "content" varchar NOT NULL,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "posts" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "title" varchar NOT NULL,
  "content" varchar NOT NULL,
  "image" varchar,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "favourites" (
  "user_id" INT NOT NULL,
  "post_id" INT NOT NULL,
  PRIMARY KEY ("user_id", "post_id")
);

CREATE TABLE "tags" (
  "id" varchar NOT NULL PRIMARY KEY
);

CREATE TABLE "tags_posts" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "tag_id" varchar NOT NULL,
  "post_id" int NOT NULL
);

CREATE TABLE "comments" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "post_id" int NOT NULL,
  "sub_comment_id" int,
  "comment" varchar NOT NULL,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "sessions" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "refresh_token" varchar UNIQUE NOT NULL,
  "is_blocked" bool NOT NULL DEFAULT false,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "rooms" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "user_rooms" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "room_id" int NOT NULL
);

ALTER TABLE "friends" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "friends" ADD FOREIGN KEY ("friend_id") REFERENCES "users" ("id");

ALTER TABLE "messages" ADD FOREIGN KEY ("sender_id") REFERENCES "users" ("id");

ALTER TABLE "messages" ADD FOREIGN KEY ("room_id") REFERENCES "rooms" ("id") ON DELETE CASCADE;

ALTER TABLE "posts" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "tags_posts" ADD FOREIGN KEY ("tag_id") REFERENCES "tags" ("id");

ALTER TABLE "tags_posts" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "comments" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "comments" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "comments" ADD FOREIGN KEY ("sub_comment_id") REFERENCES "comments" ("id");

ALTER TABLE "sessions" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_rooms" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_rooms" ADD FOREIGN KEY ("room_id") REFERENCES "rooms" ("id") ON DELETE CASCADE;

ALTER TABLE "favourites" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "favourites" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id") ON DELETE CASCADE;
